{"version":3,"sources":["images/mum.jpg","images/manali1.jpg","images/kashmir.jpg","images/leh.jpg","images/delhi.jpg","components/animation.js","components/Hamburger.jsx","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","handleHover","e","gsap","to","target","duration","y","skewX","ease","handleHoverExit","cities","name","image","mumbai","manali","kashmir","leh","delhi","Hamburger","state","menuLayer","useRef","reveal1","reveal2","cityBackground","line1","line2","line3","info","useEffect","node","node1","node2","clicked","height","stagger","amount","css","display","initial","opacity","from","transformOrigin","skewY","staggerReveal","delay","node3","staggerText","ref","el","className","onMouseEnter","onMouseOut","map","key","city","background","withRouter","history","useState","menuName","setState","disabled","setDisabled","listen","disableMenu","setTimeout","onClick","Opportunities","Solutions","Contact","Home","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ae45743.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mum.6b9bf772.jpg\";","module.exports = __webpack_public_path__ + \"static/media/manali1.621718d5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kashmir.6b278153.jpg\";","module.exports = __webpack_public_path__ + \"static/media/leh.1704b107.jpg\";","module.exports = __webpack_public_path__ + \"static/media/delhi.50b125a5.jpg\";","import gsap from \"gsap\";\r\n\r\n// OPEN MENU\r\nexport const staggerReveal = (node1, node2) => {\r\n  gsap.from([node1, node2], {\r\n    duration: 0.8,\r\n    height: 0,\r\n    transformOrigin: \"right top\",\r\n    skewY: 2,\r\n    ease: \"power3.inOut\",\r\n    stagger: {\r\n      amount: 0.1\r\n    }\r\n  });\r\n};\r\n\r\n// CLOSE MENU\r\nexport const staggerRevealClose = (node1, node2) => {\r\n  gsap.to([node1, node2], {\r\n    duration: 0.8,\r\n    height: 0,\r\n    ease: \"power3.inOut\",\r\n    stagger: {\r\n      amount: 0.07\r\n    }\r\n  });\r\n};\r\n\r\n// STAGGER THE LINKS TO APPEAR\r\nexport const staggerText = (node1, node2, node3) => {\r\n  gsap.from([node1, node2, node3], {\r\n    duration: 0.8,\r\n    y: 100,\r\n    delay: 0.1,\r\n    ease: \"power3.inOut\",\r\n    stagger: {\r\n      amount: 0.3\r\n    }\r\n  });\r\n};\r\n\r\n// Fade up for the additonal info on our menu\r\nexport const fadeInUp = node => {\r\n  gsap.from(node, {\r\n    y: 60,\r\n    duration: 1,\r\n    delay: 0.2,\r\n    opacity: 0,\r\n    ease: \"power3.inOut\"\r\n  });\r\n};\r\n\r\n// Hover on the link\r\nexport const handleHover = e => {\r\n  gsap.to(e.target, {\r\n    duration: 0.3,\r\n    y: 3,\r\n    skewX: 4,\r\n    ease: \"power1.inOut\"\r\n  });\r\n};\r\n\r\n// Hover off the link\r\nexport const handleHoverExit = e => {\r\n  gsap.to(e.target, {\r\n    duration: 0.3,\r\n    y: -3,\r\n    skewX: 0,\r\n    ease: \"power1.inOut\"\r\n  });\r\n};\r\n\r\n// adds city image once you hover on\r\nexport const handleCity = (city, target) => {\r\n  gsap.to(target, {\r\n    duration: 0,\r\n    background: `url(${city}) center center`\r\n  });\r\n  gsap.to(target, {\r\n    duration: 0.4,\r\n    opacity: 1,\r\n    ease: \"power3.inOut\"\r\n  });\r\n  gsap.from(target, {\r\n    duration: 0.4,\r\n    skewY: 2,\r\n    transformOrigin: \"right top\"\r\n  });\r\n};\r\n\r\n// Removes the city image once you hover off\r\nexport const handleCityReturn = target => {\r\n  gsap.to(target, {\r\n    duration: 0,\r\n    skewY: 0\r\n  });\r\n  gsap.to(target, {\r\n    duration: 0.4,\r\n    opacity: 0,\r\n    skewY: 0\r\n  });\r\n};\r\n","import React, { useRef, useEffect } from \"react\";\nimport { gsap } from \"gsap\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  staggerText,\n  staggerReveal,\n  fadeInUp,\n  handleHover,\n  handleHoverExit,\n  handleCityReturn,\n  handleCity,\n  staggerRevealClose\n} from \"./animation\";\n\nimport mumbai from \"../images/mum.jpg\";\nimport manali from \"../images/manali1.jpg\";\nimport kashmir from \"../images/kashmir.jpg\";\nimport leh from \"../images/leh.jpg\";\nimport delhi from \"../images/delhi.jpg\";\n\nconst cities = [\n  { name: \"Mumbai\", image: mumbai },\n  { name: \"Manali\", image: manali },\n  { name: \"Kashmir\", image: kashmir },\n  { name: \"LEH\", image: leh },\n  { name: \"Delhi\", image: delhi },\n];\nconst Hamburger = ({ state }) => {\n  // Create varibles of our dom nodes\n  let menuLayer = useRef(null);\n  let reveal1 = useRef(null);\n  let reveal2 = useRef(null);\n  let cityBackground = useRef(null);\n  let line1 = useRef(null);\n  let line2 = useRef(null);\n  let line3 = useRef(null);\n  let info = useRef(null);\n\n  useEffect(() => {\n    // If the menu is open and we click the menu button to close it.\n    if (state.clicked === false) {\n      // If menu is closed and we want to open it.\n\n      staggerRevealClose(reveal2, reveal1);\n      // Set menu to display none\n      gsap.to(menuLayer, { duration: 1, css: { display: \"none\" } });\n    } else if (\n      state.clicked === true ||\n      (state.clicked === true && state.initial === null)\n    ) {\n      // Set menu to display block\n      gsap.to(menuLayer, { duration: 0, css: { display: \"block\" } });\n      //Allow menu to have height of 100%\n      gsap.to([reveal1, reveal2], {\n        duration: 0,\n        opacity: 1,\n        height: \"100%\"\n      });\n      staggerReveal(reveal1, reveal2);\n      fadeInUp(info);\n      staggerText(line1, line2, line3);\n    }\n  }, [state]);\n\n  return (\n    <div ref={el => (menuLayer = el)} className='hamburger-menu'>\n      <div\n        ref={el => (reveal1 = el)}\n        className='menu-secondary-background-color'></div>\n      <div ref={el => (reveal2 = el)} className='menu-layer'>\n        <div\n          ref={el => (cityBackground = el)}\n          className='menu-city-background'></div>\n        <div className='container'>\n          <div className='wrapper'>\n            <div className='menu-links'>\n              <nav>\n                <ul>\n                  <li>\n                    <Link\n                      onMouseEnter={e => handleHover(e)}\n                      onMouseOut={e => handleHoverExit(e)}\n                      ref={el => (line1 = el)}\n                      to='/opportunities'>\n                      Opportunities\n                    </Link>\n                  </li>\n                  <li>\n                    <Link\n                      onMouseEnter={e => handleHover(e)}\n                      onMouseOut={e => handleHoverExit(e)}\n                      ref={el => (line2 = el)}\n                      to='/solutions'>\n                      Solutions\n                    </Link>\n                  </li>\n                  <li>\n                    <Link\n                      onMouseEnter={e => handleHover(e)}\n                      onMouseOut={e => handleHoverExit(e)}\n                      ref={el => (line3 = el)}\n                      to='/contact-us'>\n                      Contact us\n                    </Link>\n                  </li>\n                </ul>\n              </nav>\n              <div ref={el => (info = el)} className='info'>\n                <h3>Our Promise</h3>\n                <p>\n                  The passage experienced a surge in popularity during the 1960s\n                  when Letraset used it on their dry-transfer sheets, and again\n                  during the 90s as desktop publishers bundled the text with\n                  their software.\n                </p>\n              </div>\n              <div className='locations'>\n                Locations:\n                {/* Returning the list of cities */}\n                {cities.map(el => (\n                  <span\n                    key={el.name}\n                    onMouseEnter={() => handleCity(el.image, cityBackground)}\n                    onMouseOut={() => handleCityReturn(cityBackground)}>\n                    {el.name}\n                  </span>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Hamburger;\n\n\n\n\n\n\n\n","import React, { useEffect, useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Hamburger from \"./Hamburger\";\n\nconst Header = ({ history }) => {\n  const [state, setState] = useState({\n    initial: false,\n    clicked: null,\n    menuName: \"Menu\",\n  });\n  const [disabled, setDisabled] = useState(false);\n  //use effect for page changes\n  useEffect(() => {\n    //losten for page changes\n    history.listen(() => {\n      setState({\n        clicked: false,\n        menuName: \"Menu\",\n      });\n    });\n  });\n\n  const handleMenu = () => {\n    disableMenu();\n    if (state.initial === false) {\n      setState({\n        initial: null,\n        clicked: true,\n        menuName: \"Close\",\n      });\n    } else if (state.clicked === true) {\n      setState({\n        clicked: !state.clicked,\n        menuName: \"Menu\",\n      });\n    } else if (state.clicked === false) {\n      setState({\n        clicked: !state.clicked,\n        menuName: \"Close\",\n      });\n    }\n  };\n  //Determine if our menu button should be disabled\n  const disableMenu = () => {\n    setDisabled(!disabled);\n    setTimeout(() => {\n      setDisabled(false);\n    }, 1200);\n  };\n  return (\n    <header>\n      <div className=\"container\">\n        <div className=\"wrapper\">\n          <div className=\"inner-header\">\n            <div className=\"logo\">\n              <Link to=\"/\">HAMBRG</Link>\n            </div>\n            <div className=\"menu\">\n              <button disabled={disabled} onClick={handleMenu}>\n                Menu\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Hamburger state={state} />\n    </header>\n  );\n};\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport \"./App.scss\";\nimport Header from \"./components/Header\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className='App'>\n        <Header />\n        <div className='container'>\n          <div className='wrapper'>\n            <div className='home'>\n              <Switch>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/opportunities' component={Opportunities} />\n                <Route exact path='/solutions' component={Solutions} />\n                <Route exact path='/contact-us' component={Contact} />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nfunction Opportunities() {\n  return <p>Discover our numerous opportunities</p>;\n}\n\nfunction Solutions() {\n  return <p>Solutions that help you.</p>;\n}\n\nfunction Contact() {\n  return <p>Feel free to reach us.</p>;\n}\n\nfunction Home() {\n  return (\n    <div className='container'>\n      <div className='wrapper'>\n        <h5>\n          The <b>HAMBRG</b>, is a creative, engineer driven, global agency\n          working on advancing the software, advertising and design communities\n          to new heights.\n        </h5>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}